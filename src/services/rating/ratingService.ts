
import { supabase } from "@/integrations/supabase/client";

export const addPromptRating = async (promptId: string, rating: number) => {
  try {
    console.log('üåü Adicionando avalia√ß√£o:', { promptId, rating });
    
    // Inserir nova avalia√ß√£o
    const { data, error } = await supabase
      .from('prompt_ratings')
      .insert({
        prompt_id: promptId,
        rating: rating,
        user_id: null // Para permitir avalia√ß√µes an√¥nimas
      });
    
    if (error) {
      console.error('‚ùå Erro ao inserir avalia√ß√£o:', error);
      throw error;
    }

    console.log('‚úÖ Avalia√ß√£o inserida, recalculando m√©dia...');
    
    // Recalcular m√©dia usando a fun√ß√£o do banco
    const { error: updateError } = await supabase.rpc('calculate_prompt_rating_average', {
      prompt_uuid: promptId
    });
    
    if (updateError) {
      console.error('‚ùå Erro ao recalcular m√©dia:', updateError);
      throw updateError;
    }

    console.log('‚úÖ M√©dia recalculada com sucesso');
    return { data, error: null };
  } catch (error) {
    console.error('‚ùå Erro completo ao adicionar avalia√ß√£o:', error);
    return { data: null, error };
  }
};

export const incrementCopyCount = async (promptId: string) => {
  try {
    console.log('üìÑ Incrementando contador de c√≥pias para:', promptId);
    
    const { data, error } = await supabase.rpc('increment_copy_count', {
      prompt_uuid: promptId
    });
    
    if (error) {
      console.error('‚ùå Erro ao incrementar contador:', error);
      throw error;
    }

    console.log('‚úÖ Contador de c√≥pias incrementado');
    return { data, error: null };
  } catch (error) {
    console.error('‚ùå Erro ao incrementar contador de c√≥pias:', error);
    return { data: null, error };
  }
};

export const getPromptStats = async (promptId: string) => {
  try {
    const { data, error } = await supabase
      .from('prompts')
      .select('rating_average, rating_count, copy_count, simple_id')
      .eq('id', promptId)
      .single();
    
    if (error) throw error;
    return { data, error: null };
  } catch (error) {
    console.error('Erro ao buscar estat√≠sticas do prompt:', error);
    return { data: null, error };
  }
};
